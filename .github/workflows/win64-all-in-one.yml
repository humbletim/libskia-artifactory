name: windows-skia-static

on:
  push:
    branches:
      - main 
  workflow_dispatch:
      inputs:
        rust-skia-version:
          type: string
          default: 0.78.2
          required: true

run-name: ${{ github.ref_name }} | ${{ inputs.skia-version }}

jobs:
  build-windows-static:
    runs-on: windows-2022
    env:
      SKIA_DEBUG: 0
      BUILD_ARTIFACTSTAGINGDIRECTORY: ${{ github.workspace }}/artifacts

    steps:
    - uses: actions/checkout@v4
      with:
        repository: rust-skia/rust-skia 
        ref: ${{ inputs.rust-skia-version }} 
        submodules: true 

    - name: Install Rust
      uses: hecrj/setup-rust-action@v2.0.1
      with:
        rust-version: stable

    - name: Python Version
      run: python --version

    # - name: Upgrade LLVM
    #   run: choco upgrade llvm

    - name: 'Install Rust target x86_64-pc-windows-msvc'
      shell: bash
      run: rustup target add x86_64-pc-windows-msvc

    - name: 'Build Skia with all features'
      shell: bash
      run: |
        (
          echo RUST_SKIA_VERSION=$(grep 'skia =' skia-bindings/Cargo.toml | cut -d '"' -f 2 | cut -d '-' -f 2)
          echo SKIA_VERSION=$(grep 'skia =' skia-bindings/Cargo.toml | cut -d '"' -f 2 | cut -d '-' -f 1)
        ) | tee -a $GITHUB_ENV
        cargo clean
        cargo build -p skia-bindings --release --features "gl,textlayout,webp,svg,vulkan,d3d" --target x86_64-pc-windows-msvc

    - name: 'Package the release'
      shell: bash
      run: |
        echo ARTIFACT_NAME=`cat artifacts/skia-binaries/key.txt | sed -e "s@^[^-]\+-@${SKIA_VERSION}-@"` | tee -a $GITHUB_ENV
        mv -iv skia-bindings/skia/include artifacts/skia-binaries/
        find artifacts/skia-binaries -name BUILD.bazel -exec rm -v {} \;
        rm -v artifacts/skia-binaries/skia-bindings.lib artifacts/skia-binaries/*.rs

    - name: 'Generate gha-autobuild.json'
      shell: bash
      run: |
        printf '{
          "workflow": "https://github.com/%s",
          "inputs.skia-version": "%s",
          "rust-skia": "%s",
          "key": "%s",
          "tag": "%s",
          "skia": "%s",
          "built": "%s",
          "artifact": "%s"
        }' \
          "${GITHUB_WORKFLOW_REF}" \
          "${{ inputs.rust-skia-version }}" \
          "${RUST_SKIA_VERSION}" \
          "`cat artifacts/skia-binaries/key.txt`" \
          "`cat artifacts/skia-binaries/tag.txt`" \
          "${SKIA_VERSION}" \
          "`date --rfc-3339=ns --utc`" \
          "${ARTIFACT_NAME}" \
          | tee artifacts/skia-binaries/gha-autobuild.json

    - name: 'Upload artifact'
      uses: actions/upload-artifact@v4
      with:
        name: libskia-${{ env.ARTIFACT_NAME }}  
        path: ${{ env.BUILD_ARTIFACTSTAGINGDIRECTORY }}/skia-binaries

    - name: Setup tmate session
      if: failure() || true
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true # Only you can access the session
