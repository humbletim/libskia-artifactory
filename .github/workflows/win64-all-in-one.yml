name: windows-skia-static

on:
  push:
    branches:
      - main 
  workflow_dispatch:
      inputs:
        skia-version:
          type: string
          default: 0.78.2
          required: false

run-name: ${{ github.ref_name }} | ${{ inputs.skia-version }}

jobs:
  build-windows-static:
    runs-on: windows-2022
    env:
      SKIA_DEBUG: 0
      BUILD_ARTIFACTSTAGINGDIRECTORY: ${{ github.workspace }}/artifacts

    steps:
    - uses: actions/checkout@v3
      with:
        repository: rust-skia/rust-skia 
        ref: ${{ inputs.skia-version }} 
        submodules: true 

    - name: Install Rust
      uses: hecrj/setup-rust-action@v1.4.0
      with:
        rust-version: stable

    - name: Install Clippy
      run: rustup component add clippy
      shell: bash

    - name: Python Version
      run: python --version

    # - name: Upgrade LLVM
    #   run: choco upgrade llvm

    - name: 'Install Rust target x86_64-pc-windows-msvc'
      shell: bash
      run: rustup target add x86_64-pc-windows-msvc

    - name: 'Build Skia with all features'
      shell: bash
      run: |
        cargo clean
        cargo build -p skia-bindings --release --features "gl,textlayout,webp,svg,vulkan,d3d" --target x86_64-pc-windows-msvc

    - name: 'Relocate Skia headers'
      shell: bash
      run: |
        mv -iv skia-bindings/skia/include ${{ env.BUILD_ARTIFACTSTAGINGDIRECTORY }}/skia-binaries/

    - name: 'Package the release'
      shell: bash
      run: |
        echo "ARTIFACT_NAME=`cat ${BUILD_ARTIFACTSTAGINGDIRECTORY}/skia-binaries/key.txt`" | tee -a $GITHUB_ENV

    - name: 'Upload artifact'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARTIFACT_NAME }}  
        path: ${{ env.BUILD_ARTIFACTSTAGINGDIRECTORY }}/skia-binaries
    - name: Setup tmate session
      if: failure() || true
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true # Only you can access the session
